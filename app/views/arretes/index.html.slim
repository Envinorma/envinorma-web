.am_nav
  .container
    .glide
      div class="glide__track" data-glide-el="track"
        ul.glide__slides
          - if @arretes.any?
            - @arretes.each do |arrete|
              - am_classement_infos = classement_infos(arrete, @installation)
              li.glide__slide
                a href="#anchor_am_#{arrete.id}"
                  => arrete.short_title
                  br
                    small
                      => am_classement_infos
                      - if arrete.enriched?
                        span class="badge badge-success" enrichi

          - if @aps.any?
            - @aps.each do |ap|
              li.glide__slide
                a href="#anchor_ap_#{ap.id}"
                  => ap.date

      div class="glide__arrows" data-glide-el="controls"
        button class="glide__arrow glide__arrow--left" data-glide-dir="<"<
        button class="glide__arrow glide__arrow--right" data-glide-dir=">">

.container
  = link_to '< Retour à l’installation', installation_path(@installation), class: 'back_link js_loader__link'

  - if @arretes.any?
      - @arretes.each do |arrete|
        - am_short_title = arrete.short_title
        - am_classement_infos = classement_infos(arrete, @installation)
        section id="anchor_am_#{arrete.id}" class='anchor'
          .row
            .col-2
              dl.summary
                .display-summary id="anchor_#{arrete.id}_summary" class='anchor'
                  - arrete.summary['elements'].each do |summary_item|
                    dd
                      a class="level_#{summary_item['depth']}" href="#anchor_#{summary_item['section_id']}"
                        = summary_item['section_title']

            .col-7
              - if arrete.enriched?
                span class='badge badge-success float-right' enrichi
              h2.display.h1
                = arrete.short_title
                span.text-secondary
                  = am_classement_infos
              p
                strong = arrete.title

              p.mb-5
                = link_to 'Consulter sur Aida', arrete.aida_url, target: '_blank'
                = link_to 'Consulter sur Légifrance', arrete.legifrance_url, target: '_blank', class: 'ml-3'

              - arrete.data.sections.each do |section|
                - extract_sections = lambda do |subsection, level = 3|

                  div id="anchor_#{subsection.id}" class='anchor anchor-summary'

                    / display title
                    - if subsection.applicability.active
                      - if subsection.outer_alineas.present?
                        - subsection_id = subsection.id
                        *{ tag: "h#{level}",
                          class: 'icon-collapse',
                          data: { toggle: 'collapse', target: "#collapse_#{subsection_id}" } }
                          = subsection.title.text

                      - else
                        *{ tag: "h#{level}" } = subsection.title.text

                    / display inactive title
                    - else
                      .inactive
                        - if subsection.outer_alineas.present?
                          - subsection_id = subsection.id
                          *{ tag: "h#{level}",
                            class: 'icon-collapse',
                            data: { toggle: 'collapse', target: "#collapse_#{subsection_id}" } }
                            = subsection.title.text
                        - else
                          *{ tag: "h#{level}" } = subsection.title.text

                    / display warning
                    - subsection.applicability.warnings.each do |warning|
                      .alert.alert-secondary
                        p = warning

                    / display outeralineas
                    - if subsection.outer_alineas.present?
                      .collapse.show id="collapse_#{subsection_id}"

                        / display button and collapse original text version if modified
                        - if subsection.applicability.modified
                          small
                            .border-bottom.mb-3.pb-3
                              *{ tag: "a href='#'",
                                class: 'icon-collapse icon-collapse-mini',
                                data: { toggle: 'collapse', target: "#modified_collapse_#{subsection_id}" } }
                                | voir le texte d'origine

                              .inactive
                                .collapse id="modified_collapse_#{subsection_id}"
                                  = render partial: 'outer_alineas',
                                    locals: { subsection: subsection.applicability.previous_version,
                                              level: level,
                                              subsection_id: subsection_id,
                                              ref: "#{am_short_title} #{am_classement_infos} - #{subsection.reference_str}",
                                              am_id: arrete.id }

                        / display select_all checkbox
                        - if subsection.applicability.active && subsection.outer_alineas.count > 1
                          .border-bottom.mb-3.pb-3
                            .form-group.row
                                .col-sm-12
                                  .form-check
                                    = check_box_tag "select_all_#{subsection_id}",
                                      '1', false, class: 'form-check-input select_all'

                        = render partial: 'outer_alineas',
                          locals: { subsection: subsection,
                                    level: level,
                                    subsection_id: subsection_id,
                                    ref: subsection.reference_str,
                                    am_ref: "#{am_short_title} #{am_classement_infos}",
                                    am_id: arrete.id }

                  / iterate on sections and increment level
                  - subsection.sections.each do |item|
                    - extract_sections.call(item, level + 1)

                - extract_sections.call(section)

          hr.mb-5.mt-5

  - if @aps.any?
      - @aps.each do |ap|
        section id="anchor_ap_#{ap.id}" class='anchor'
          .row
            .col-3
              h5 = ap.title
              = simple_form_for @prescription, remote: true do |f|
                .row
                  .col-12
                    = f.input :reference
                  .col-12
                    = f.input :content, as: :text

                  = f.hidden_field :user_id, value: @user.id

                = f.button :submit, 'ajouter une prescription', class: 'btn btn-primary'
            .col-6
              object data="https://storage.sbg.cloud.ovh.net/v1/AUTH_3287ea227a904f04ad4e8bceb0776108/ap/#{ap.georisques_id.gsub('/', '_')}.pdf" type="image/svg+xml" class="pdf_viewer"

        hr.mb-5.mt-5

  .col-3.offset-9.summary
    h4 Prescriptions à exporter
    div#prescriptions_recap Aucune prescription sélectionnée
    hr
    div#prescriptions_ap
      = render partial: './prescriptions/prescription', collection: @prescriptions


= link_to "Générer une fiche d'inspection", generate_doc_path, :method => :post, class: 'btn btn-primary btn-fixed-bottom'
